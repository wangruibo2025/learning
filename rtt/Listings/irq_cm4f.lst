


ARM Macro Assembler    Page 1 


    1 00000000         ;/*
    2 00000000         ; * Copyright (c) 2013-2017 ARM Limited. All rights rese
                       rved.
    3 00000000         ; *
    4 00000000         ; * SPDX-License-Identifier: Apache-2.0
    5 00000000         ; *
    6 00000000         ; * Licensed under the Apache License, Version 2.0 (the 
                       License); you may
    7 00000000         ; * not use this file except in compliance with the Lice
                       nse.
    8 00000000         ; * You may obtain a copy of the License at
    9 00000000         ; *
   10 00000000         ; * www.apache.org/licenses/LICENSE-2.0
   11 00000000         ; *
   12 00000000         ; * Unless required by applicable law or agreed to in wr
                       iting, software
   13 00000000         ; * distributed under the License is distributed on an A
                       S IS BASIS, WITHOUT
   14 00000000         ; * WARRANTIES OR CONDITIONS OF ANY KIND, either express
                        or implied.
   15 00000000         ; * See the License for the specific language governing 
                       permissions and
   16 00000000         ; * limitations under the License.
   17 00000000         ; *
   18 00000000         ; * ----------------------------------------------------
                       -------------------------
   19 00000000         ; *
   20 00000000         ; * Project:     CMSIS-RTOS RTX
   21 00000000         ; * Title:       Cortex-M4F Exception handlers
   22 00000000         ; *
   23 00000000         ; * ----------------------------------------------------
                       -------------------------
   24 00000000         ; */
   25 00000000         
   26 00000000         
   27 00000000 00000014 
                       I_T_RUN_OFS
                               EQU              20          ; osRtxInfo.thread.
                                                            run offset
   28 00000000 00000038 
                       TCB_SP_OFS
                               EQU              56          ; TCB.SP offset
   29 00000000 00000022 
                       TCB_SF_OFS
                               EQU              34          ; TCB.stack_frame o
                                                            ffset
   30 00000000         
   31 00000000         
   32 00000000                 PRESERVE8
   33 00000000                 THUMB
   34 00000000         
   35 00000000         
   36 00000000                 AREA             |.constdata|, DATA, READONLY
   37 00000000                 EXPORT           irqRtxLib
   38 00000000 00      irqRtxLib
                               DCB              0           ; Non weak library 
                                                            reference
   39 00000001         
   40 00000001         



ARM Macro Assembler    Page 2 


   41 00000001                 AREA             |.text|, CODE, READONLY
   42 00000000         
   43 00000000         
   44 00000000         SVC_Handler
                               PROC
   45 00000000                 EXPORT           SVC_Handler
   46 00000000                 IMPORT           osRtxUserSVC
   47 00000000                 IMPORT           osRtxInfo
   48 00000000         
   49 00000000 F01E 0F04       TST              LR,#0x04    ; Determine return 
                                                            stack from EXC_RETU
                                                            RN bit 2
   50 00000004 BF0C            ITE              EQ
   51 00000006 F3EF 8008       MRSEQ            R0,MSP      ; Get MSP if return
                                                             stack is MSP
   52 0000000A F3EF 8009       MRSNE            R0,PSP      ; Get PSP if return
                                                             stack is PSP
   53 0000000E         
   54 0000000E 6981            LDR              R1,[R0,#24] ; Load saved PC fro
                                                            m stack
   55 00000010 F811 1C02       LDRB             R1,[R1,#-2] ; Load SVC number
   56 00000014 BB91            CBNZ             R1,SVC_User ; Branch if not SVC
                                                             0
   57 00000016         
   58 00000016 B501            PUSH             {R0,LR}     ; Save SP and EXC_R
                                                            ETURN
   59 00000018 E890 100F       LDM              R0,{R0-R3,R12} ; Load function 
                                                            parameters and addr
                                                            ess from stack
   60 0000001C 47E0            BLX              R12         ; Call service func
                                                            tion
   61 0000001E E8BD 5000       POP              {R12,LR}    ; Restore SP and EX
                                                            C_RETURN
   62 00000022 E88C 0003       STM              R12,{R0-R1} ; Store function re
                                                            turn values
   63 00000026         
   64 00000026         SVC_Context
   65 00000026 4B24            LDR              R3,=osRtxInfo+I_T_RUN_OFS ; Loa
                                                            d address of osRtxI
                                                            nfo.run
   66 00000028 E893 0006       LDM              R3,{R1,R2}  ; Load osRtxInfo.th
                                                            read.run: curr & ne
                                                            xt
   67 0000002C 4291            CMP              R1,R2       ; Check if thread s
                                                            witch is required
   68 0000002E BF08            IT               EQ
   69 00000030 4770            BXEQ             LR          ; Exit when threads
                                                             are the same
   70 00000032         
   71 00000032 B941            CBNZ             R1,SVC_ContextSave ; Branch if 
                                                            running thread is n
                                                            ot deleted
   72 00000034 F01E 0F10       TST              LR,#0x10    ; Check if extended
                                                             stack frame
   73 00000038 D110            BNE              SVC_ContextSwitch
   74 0000003A 4920            LDR              R1,=0xE000EF34 ; FPCCR Address
   75 0000003C 6808            LDR              R0,[R1]     ; Load FPCCR
   76 0000003E F020 0001       BIC              R0,R0,#1    ; Clear LSPACT (Laz
                                                            y state)



ARM Macro Assembler    Page 3 


   77 00000042 6008            STR              R0,[R1]     ; Store FPCCR
   78 00000044 E00A            B                SVC_ContextSwitch
   79 00000046         
   80 00000046         SVC_ContextSave
   81 00000046 E92C 0FF0       STMDB            R12!,{R4-R11} ; Save R4..R11
   82 0000004A F01E 0F10       TST              LR,#0x10    ; Check if extended
                                                             stack frame
   83 0000004E BF08            IT               EQ
   84 00000050 ED2C 8A10       VSTMDBEQ         R12!,{S16-S31} 
                                                            ;  Save VFP S16.S31
                                                            
   85 00000054 F8C1 C038       STR              R12,[R1,#TCB_SP_OFS] ; Store SP
                                                            
   86 00000058 F881 E022       STRB             LR, [R1,#TCB_SF_OFS] ; Store st
                                                            ack frame informati
                                                            on
   87 0000005C         
   88 0000005C         SVC_ContextSwitch
   89 0000005C 601A            STR              R2,[R3]     ; osRtxInfo.thread.
                                                            run: curr = next
   90 0000005E         
   91 0000005E         SVC_ContextRestore
   92 0000005E F892 1022       LDRB             R1,[R2,#TCB_SF_OFS] ; Load stac
                                                            k frame information
                                                            
   93 00000062 6B90            LDR              R0,[R2,#TCB_SP_OFS] ; Load SP
   94 00000064 F061 0EFF       ORR              LR,R1,#0xFFFFFF00 
                                                            ; Set EXC_RETURN
   95 00000068         
   96 00000068 F01E 0F10       TST              LR,#0x10    ; Check if extended
                                                             stack frame
   97 0000006C BF08            IT               EQ
   98 0000006E ECB0 8A10       VLDMIAEQ         R0!,{S16-S31} ;  Restore VFP S1
                                                            6..S31
   99 00000072 E8B0 0FF0       LDMIA            R0!,{R4-R11} ; Restore R4..R11
  100 00000076 F380 8809       MSR              PSP,R0      ; Set PSP
  101 0000007A         
  102 0000007A         SVC_Exit
  103 0000007A 4770            BX               LR          ; Exit from handler
                                                            
  104 0000007C         
  105 0000007C         SVC_User
  106 0000007C 4A10            LDR              R2,=osRtxUserSVC ; Load address
                                                             of SVC table
  107 0000007E 6813            LDR              R3,[R2]     ; Load SVC maximum 
                                                            number
  108 00000080 4299            CMP              R1,R3       ; Check SVC number 
                                                            range
  109 00000082 D8FA            BHI              SVC_Exit    ; Branch if out of 
                                                            range
  110 00000084         
  111 00000084 B501            PUSH             {R0,LR}     ; Save SP and EXC_R
                                                            ETURN
  112 00000086 F852 C021       LDR              R12,[R2,R1,LSL #2] ; Load addre
                                                            ss of SVC function
  113 0000008A C80F            LDM              R0,{R0-R3}  ; Load function par
                                                            ameters from stack
  114 0000008C 47E0            BLX              R12         ; Call service func
                                                            tion



ARM Macro Assembler    Page 4 


  115 0000008E E8BD 5000       POP              {R12,LR}    ; Restore SP and EX
                                                            C_RETURN
  116 00000092 F8CC 0000       STR              R0,[R12]    ; Store function re
                                                            turn value
  117 00000096         
  118 00000096 4770            BX               LR          ; Return from handl
                                                            er
  119 00000098         
  120 00000098                 ALIGN
  121 00000098                 ENDP
  122 00000098         
  123 00000098         
  124 00000098         PendSV_Handler
                               PROC
  125 00000098                 EXPORT           PendSV_Handler
  126 00000098                 IMPORT           osRtxPendSV_Handler
  127 00000098         
  128 00000098 B501            PUSH             {R0,LR}     ; Save EXC_RETURN
  129 0000009A F7FF FFFE       BL               osRtxPendSV_Handler ; Call osRt
                                                            xPendSV_Handler
  130 0000009E E8BD 4001       POP              {R0,LR}     ; Restore EXC_RETUR
                                                            N
  131 000000A2 F3EF 8C09       MRS              R12,PSP
  132 000000A6 E7BE            B                SVC_Context
  133 000000A8         
  134 000000A8                 ALIGN
  135 000000A8                 ENDP
  136 000000A8         
  137 000000A8         
  138 000000A8         SysTick_Handler
                               PROC
  139 000000A8                 EXPORT           SysTick_Handler
  140 000000A8                 IMPORT           osRtxTick_Handler
  141 000000A8         
  142 000000A8 B501            PUSH             {R0,LR}     ; Save EXC_RETURN
  143 000000AA F7FF FFFE       BL               osRtxTick_Handler ; Call osRtxT
                                                            ick_Handler
  144 000000AE E8BD 4001       POP              {R0,LR}     ; Restore EXC_RETUR
                                                            N
  145 000000B2 F3EF 8C09       MRS              R12,PSP
  146 000000B6 E7B6            B                SVC_Context
  147 000000B8         
  148 000000B8                 ALIGN
  149 000000B8                 ENDP
  150 000000B8         
  151 000000B8         
  152 000000B8                 END
              00000014 
              E000EF34 
              00000000 
Command Line: --debug --xref --diag_suppress=9931 --cpu=Cortex-M4.fp --apcs=int
erwork --depend=.\objects\irq_cm4f.d -o.\objects\irq_cm4f.o -I.\RTE\CMSIS -I.\R
TE\Device\STM32F407ZE -I.\RTE\RTOS -I.\RTE\_demo -IC:\Keil_v5\ARM\PACK\ARM\CMSI
S\5.2.0\CMSIS\Include -IC:\Keil_v5\ARM\PACK\ARM\CMSIS\5.2.0\CMSIS\RTOS2\Include
 -IC:\Keil_v5\ARM\PACK\ARM\CMSIS\5.2.0\CMSIS\RTOS2\RTX\Include -IC:\Keil_v5\ARM
\PACK\ARM\CMSIS\5.2.0\CMSIS\RTOS2\RTX\Include1 -IC:\Keil_v5\ARM\PACK\Keil\STM32
F4xx_DFP\1.0.8\Device\Include -IC:\Keil_v5\ARM\PACK\Keil\STM32F4xx_DFP\1.0.8\De
vice\StdPeriph_Driver\inc -IC:\Keil_v5\ARM\PACK\RealThread\RT-Thread\3.1.5\comp
onents\finsh -IC:\Keil_v5\ARM\PACK\RealThread\RT-Thread\3.1.5\include --predefi



ARM Macro Assembler    Page 5 


ne="__UVISION_VERSION SETA 525" --predefine="_RTE_ SETA 1" --predefine="STM32F4
0_41xxx SETA 1" --list=.\listings\irq_cm4f.lst C:\Keil_v5\ARM\PACK\ARM\CMSIS\5.
2.0\CMSIS\RTOS2\RTX\Source\ARM\irq_cm4f.s



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

.constdata 00000000

Symbol: .constdata
   Definitions
      At line 36 in file C:\Keil_v5\ARM\PACK\ARM\CMSIS\5.2.0\CMSIS\RTOS2\RTX\So
urce\ARM\irq_cm4f.s
   Uses
      None
Comment: .constdata unused
irqRtxLib 00000000

Symbol: irqRtxLib
   Definitions
      At line 38 in file C:\Keil_v5\ARM\PACK\ARM\CMSIS\5.2.0\CMSIS\RTOS2\RTX\So
urce\ARM\irq_cm4f.s
   Uses
      At line 37 in file C:\Keil_v5\ARM\PACK\ARM\CMSIS\5.2.0\CMSIS\RTOS2\RTX\So
urce\ARM\irq_cm4f.s
Comment: irqRtxLib used once
2 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

.text 00000000

Symbol: .text
   Definitions
      At line 41 in file C:\Keil_v5\ARM\PACK\ARM\CMSIS\5.2.0\CMSIS\RTOS2\RTX\So
urce\ARM\irq_cm4f.s
   Uses
      None
Comment: .text unused
PendSV_Handler 00000098

Symbol: PendSV_Handler
   Definitions
      At line 124 in file C:\Keil_v5\ARM\PACK\ARM\CMSIS\5.2.0\CMSIS\RTOS2\RTX\S
ource\ARM\irq_cm4f.s
   Uses
      At line 125 in file C:\Keil_v5\ARM\PACK\ARM\CMSIS\5.2.0\CMSIS\RTOS2\RTX\S
ource\ARM\irq_cm4f.s
Comment: PendSV_Handler used once
SVC_Context 00000026

Symbol: SVC_Context
   Definitions
      At line 64 in file C:\Keil_v5\ARM\PACK\ARM\CMSIS\5.2.0\CMSIS\RTOS2\RTX\So
urce\ARM\irq_cm4f.s
   Uses
      At line 132 in file C:\Keil_v5\ARM\PACK\ARM\CMSIS\5.2.0\CMSIS\RTOS2\RTX\S
ource\ARM\irq_cm4f.s
      At line 146 in file C:\Keil_v5\ARM\PACK\ARM\CMSIS\5.2.0\CMSIS\RTOS2\RTX\S
ource\ARM\irq_cm4f.s

SVC_ContextRestore 0000005E

Symbol: SVC_ContextRestore
   Definitions
      At line 91 in file C:\Keil_v5\ARM\PACK\ARM\CMSIS\5.2.0\CMSIS\RTOS2\RTX\So
urce\ARM\irq_cm4f.s
   Uses
      None
Comment: SVC_ContextRestore unused
SVC_ContextSave 00000046

Symbol: SVC_ContextSave
   Definitions
      At line 80 in file C:\Keil_v5\ARM\PACK\ARM\CMSIS\5.2.0\CMSIS\RTOS2\RTX\So
urce\ARM\irq_cm4f.s
   Uses
      At line 71 in file C:\Keil_v5\ARM\PACK\ARM\CMSIS\5.2.0\CMSIS\RTOS2\RTX\So
urce\ARM\irq_cm4f.s
Comment: SVC_ContextSave used once
SVC_ContextSwitch 0000005C

Symbol: SVC_ContextSwitch
   Definitions
      At line 88 in file C:\Keil_v5\ARM\PACK\ARM\CMSIS\5.2.0\CMSIS\RTOS2\RTX\So
urce\ARM\irq_cm4f.s
   Uses
      At line 73 in file C:\Keil_v5\ARM\PACK\ARM\CMSIS\5.2.0\CMSIS\RTOS2\RTX\So
urce\ARM\irq_cm4f.s



ARM Macro Assembler    Page 2 Alphabetic symbol ordering
Relocatable symbols

      At line 78 in file C:\Keil_v5\ARM\PACK\ARM\CMSIS\5.2.0\CMSIS\RTOS2\RTX\So
urce\ARM\irq_cm4f.s

SVC_Exit 0000007A

Symbol: SVC_Exit
   Definitions
      At line 102 in file C:\Keil_v5\ARM\PACK\ARM\CMSIS\5.2.0\CMSIS\RTOS2\RTX\S
ource\ARM\irq_cm4f.s
   Uses
      At line 109 in file C:\Keil_v5\ARM\PACK\ARM\CMSIS\5.2.0\CMSIS\RTOS2\RTX\S
ource\ARM\irq_cm4f.s
Comment: SVC_Exit used once
SVC_Handler 00000000

Symbol: SVC_Handler
   Definitions
      At line 44 in file C:\Keil_v5\ARM\PACK\ARM\CMSIS\5.2.0\CMSIS\RTOS2\RTX\So
urce\ARM\irq_cm4f.s
   Uses
      At line 45 in file C:\Keil_v5\ARM\PACK\ARM\CMSIS\5.2.0\CMSIS\RTOS2\RTX\So
urce\ARM\irq_cm4f.s
Comment: SVC_Handler used once
SVC_User 0000007C

Symbol: SVC_User
   Definitions
      At line 105 in file C:\Keil_v5\ARM\PACK\ARM\CMSIS\5.2.0\CMSIS\RTOS2\RTX\S
ource\ARM\irq_cm4f.s
   Uses
      At line 56 in file C:\Keil_v5\ARM\PACK\ARM\CMSIS\5.2.0\CMSIS\RTOS2\RTX\So
urce\ARM\irq_cm4f.s
Comment: SVC_User used once
SysTick_Handler 000000A8

Symbol: SysTick_Handler
   Definitions
      At line 138 in file C:\Keil_v5\ARM\PACK\ARM\CMSIS\5.2.0\CMSIS\RTOS2\RTX\S
ource\ARM\irq_cm4f.s
   Uses
      At line 139 in file C:\Keil_v5\ARM\PACK\ARM\CMSIS\5.2.0\CMSIS\RTOS2\RTX\S
ource\ARM\irq_cm4f.s
Comment: SysTick_Handler used once
10 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Absolute symbols

I_T_RUN_OFS 00000014

Symbol: I_T_RUN_OFS
   Definitions
      At line 27 in file C:\Keil_v5\ARM\PACK\ARM\CMSIS\5.2.0\CMSIS\RTOS2\RTX\So
urce\ARM\irq_cm4f.s
   Uses
      At line 65 in file C:\Keil_v5\ARM\PACK\ARM\CMSIS\5.2.0\CMSIS\RTOS2\RTX\So
urce\ARM\irq_cm4f.s
Comment: I_T_RUN_OFS used once
TCB_SF_OFS 00000022

Symbol: TCB_SF_OFS
   Definitions
      At line 29 in file C:\Keil_v5\ARM\PACK\ARM\CMSIS\5.2.0\CMSIS\RTOS2\RTX\So
urce\ARM\irq_cm4f.s
   Uses
      At line 86 in file C:\Keil_v5\ARM\PACK\ARM\CMSIS\5.2.0\CMSIS\RTOS2\RTX\So
urce\ARM\irq_cm4f.s
      At line 92 in file C:\Keil_v5\ARM\PACK\ARM\CMSIS\5.2.0\CMSIS\RTOS2\RTX\So
urce\ARM\irq_cm4f.s

TCB_SP_OFS 00000038

Symbol: TCB_SP_OFS
   Definitions
      At line 28 in file C:\Keil_v5\ARM\PACK\ARM\CMSIS\5.2.0\CMSIS\RTOS2\RTX\So
urce\ARM\irq_cm4f.s
   Uses
      At line 85 in file C:\Keil_v5\ARM\PACK\ARM\CMSIS\5.2.0\CMSIS\RTOS2\RTX\So
urce\ARM\irq_cm4f.s
      At line 93 in file C:\Keil_v5\ARM\PACK\ARM\CMSIS\5.2.0\CMSIS\RTOS2\RTX\So
urce\ARM\irq_cm4f.s

3 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
External symbols

osRtxInfo 00000000

Symbol: osRtxInfo
   Definitions
      At line 47 in file C:\Keil_v5\ARM\PACK\ARM\CMSIS\5.2.0\CMSIS\RTOS2\RTX\So
urce\ARM\irq_cm4f.s
   Uses
      At line 65 in file C:\Keil_v5\ARM\PACK\ARM\CMSIS\5.2.0\CMSIS\RTOS2\RTX\So
urce\ARM\irq_cm4f.s
Comment: osRtxInfo used once
osRtxPendSV_Handler 00000000

Symbol: osRtxPendSV_Handler
   Definitions
      At line 126 in file C:\Keil_v5\ARM\PACK\ARM\CMSIS\5.2.0\CMSIS\RTOS2\RTX\S
ource\ARM\irq_cm4f.s
   Uses
      At line 129 in file C:\Keil_v5\ARM\PACK\ARM\CMSIS\5.2.0\CMSIS\RTOS2\RTX\S
ource\ARM\irq_cm4f.s
Comment: osRtxPendSV_Handler used once
osRtxTick_Handler 00000000

Symbol: osRtxTick_Handler
   Definitions
      At line 140 in file C:\Keil_v5\ARM\PACK\ARM\CMSIS\5.2.0\CMSIS\RTOS2\RTX\S
ource\ARM\irq_cm4f.s
   Uses
      At line 143 in file C:\Keil_v5\ARM\PACK\ARM\CMSIS\5.2.0\CMSIS\RTOS2\RTX\S
ource\ARM\irq_cm4f.s
Comment: osRtxTick_Handler used once
osRtxUserSVC 00000000

Symbol: osRtxUserSVC
   Definitions
      At line 46 in file C:\Keil_v5\ARM\PACK\ARM\CMSIS\5.2.0\CMSIS\RTOS2\RTX\So
urce\ARM\irq_cm4f.s
   Uses
      At line 106 in file C:\Keil_v5\ARM\PACK\ARM\CMSIS\5.2.0\CMSIS\RTOS2\RTX\S
ource\ARM\irq_cm4f.s
Comment: osRtxUserSVC used once
4 symbols
355 symbols in table
